//Rem font size with px fallback for IE 8 and older
//assume base font-size set to 62.5% (so that default font-size is 10px, not 16px)
@mixin rem-font-size($size-value: 1.6) {
  font-size: ($size-value * 10) + px;
  font-size: $size-value + rem;
} 



//mediaquery breakpoints mixin:
@mixin bp($point) {
  // mobile-first

  //standard mobile 
  @if $point == mobileonly {
    @media (max-width: 640px) { @content ; }
    //standard: 360x640
    // iphone6: 375x667 
    // iphone6+: 414x736
    // galaxy S5: 360x640
  }

  //most tablets portrait 
  @if $point == tabletport {
    @media (min-width: 768px) { @content ; }
    //galaxy tab 10.1: 1280x800
    //Nexus 7: 601x906
    //Kindle Fire HD 7: 800x1280
    //Kindle Fire HD 8.9: 1200x1600
  }

  //most tablets landscape 
  @if $point == tabletland {
    @media (min-width: 1024px) { @content ; }
  }

  //laptop (large tablet, small desktop)
  @if $point == laptop {
    @media (min-width: 1200px) { @content ; }
  }

  //standard desktop
  @if $point == desktop {
    @media (min-width: 1400px) { @content ; }
  }

  //wide 
  @if $point == wide {
    @media (min-width: 1921px) { @content ; }
  }
 
  

}

//Shortcuts mixins


// centre stuff horizontally
@mixin centre($width){
  left: 50%;
  transform: translateX(-50%); //avoids paint and layout
  width: $width;

  // lte ie9 (using modernizr)
  .no-csstransforms & {
    left: auto;
    margin-left: auto;
    margin-right: auto;
    width: $width;
  }
}

// image replacement
//(using the Scott Kellum method)
@mixin hide-text($width, $height, $imgurl) {
  width: $width;
  height: $height;
  background: url($imgurl) no-repeat 0 0;
  background-size: cover;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}
// Usage:
.hide-text-from-browser {
  @include hide-text(200px, 200px, '../images/recycle.svg');
  display: inline-block;  

  //lte ie8 (using modernizr)
  .no-svg & {
    background: url('../images/recycle.png') no-repeat 0 0;
  }
}

//getting started with BEM??
//BEM - c.f https://css-tricks.com/bem-101/
@mixin element($name) {
  @at-root &__#{$name} //this throws a scss-lint warning SpaceBeforeBrace
  {
    @content;
  }
}


//Animation mixins
@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}
//Usage:
// @include keyframes(move-the-object) {
//   0%   { left: 100px; }
//   100% { left: 200px; }
// }

// .object-to-animate {
//   @include animation('move-the-object .5s 1', 'move-the-object-again .5s 1 .5s');
// } 